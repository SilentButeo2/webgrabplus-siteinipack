**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: gracenote.com
* @MinSWversion: V5.0
* @Revision 15 - [09/03/2024] Blackbear199
*  - add repeat(previously shown),premiere
* @Revision 14 - [17/01/2024] Blackbear199
*  - channel creation fix for OTA
* @Revision 13 - [14/10/2023] Blackbear199
*  - add Live to title for live events
* @Revision 12 - [02/07/2023] Blackbear199
*  - improvements
* @Revision 11 - [27/12/2021] Blackbear199
*  - channel xml fix
* @Revision 10 - [02/04/2018] Blackbear199
*  - add languagecode
* @Revision 9 - [12/01/2018] Blackbear199
*  - fix episode system(add pattern),fix actor role
* @Revision 8 - [09/01/2018] Blackbear199
*  - rewrite - new epg page
* @Revision 7 - [30/12/2017] Blackbear199
*  - url_index fix
* @Remarks: 1.Add your country/zip or postalcode to the site_id=""
*             Example USA/zipcode USA/10001 or Canada/postalcode CAN/M1R3C7
*             <channel update="i" site="gracenote.com" site_id="USA/10001" xmltv_id="dummy">dummy</channel>
*             or
*             <channel update="i" site="gracenote.com" site_id="CAN/M1R3C7" xmltv_id="dummy">dummy</channel>
*             <timespan>0</timespan>
*             <update>c1-10001</update> or <update>c1-M1R3C7</update>
*           2.Use a channel line from the files creates in step 1.
*             <update>c2-10001-directv</update> or <update>c2-M1R3C7-bell</update>
* @header_end
**------------------------------------------------------------------------------------------------
site {url=gracenote.com|timezone=UTC|maxdays=13.1|cultureinfo=en-US|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
site {ratingsystem=MPAA|episodesystem=xmltv_ns}
*
url_index              {url|https://tvlistings.gracenote.com/api/sslgrid}
url_index.headers      {method=POST}
url_index.headers      {postdata=IsSSLinkNavigation=true&timespan=336&timestamp='global_temp_9'&prgsvcid='global_temp_6'&headendId='global_temp_3'&countryCode='global_temp_4'&postalCode='global_temp_5'&device='global_temp_1'&userId=-&aid=cha&isOverride=true&languagecode=en}
url_index.headers      {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format         {datestring|yyyy-MM-dd}
*
scope.range            {(urlindex)|end}
global_temp_9.modify   {calculate(format=date,unix)|'urldate'}
global_temp_1.modify   {substring(type=regex)|'config_site_id' "^([^/]*)"}
global_temp_2.modify   {substring(type=regex)|'config_site_id' "^[^\/]*\/([^\/]*)"}
global_temp_3.modify   {substring(type=regex)|'config_site_id' "^[^\/]*\/[^\/]*\/([^\/]+)"}
global_temp_4.modify   {substring(type=regex)|'config_site_id' "^[^\/]*\/[^\/]*\/[^\/]+\/([^\/]+)"}
global_temp_5.modify   {substring(type=regex)|'config_site_id' "^[^\/]*\/[^\/]*\/[^\/]+\/[^\/]+\/([^\/]+)"}
global_temp_6.modify   {substring(type=regex)|'config_site_id' "\/(\d+)$"}
end_scope
*
index_urlchannellogo.modify {set|https://zap2it.tmsimg.com/h3/NowShowing/'global_temp_6'/s''global_temp_6''_h3_aa.png}
*
index_showsplit.scrub  {regex||\{"startTime":.*?\}\}||}
scope.range            {(splitindex)|end}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify{(debug)}
end_scope
*
index_temp_9.scrub     {single|"seriesId":"||",|",}
index_urlshow.modify   {addstart('index_temp_9' not "")|https://tvlistings.gracenote.com/api/program/overviewDetails}
index_urlshow.headers  {method=POST}
index_urlshow.headers  {postdata=programSeriesID='index_temp_9'&headendId='global_temp_3'&countryCode='global_temp_4'&postalCode='global_temp_5'&device='global_temp_1'&userId=-&aid=cha&DSTUTCOffset=-300&STDUTCOffset=-300&DSTStart=2018-03-11T02%3A00Z&DSTEnd=2018-11-04T02%3A00Z&languagecode=en}
index_urlshow.headers  {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub      {single|"startTime":||,|,}
index_stop.scrub       {single|"endTime":||,|,}
index_title.scrub      {single|"title":"||",|",}
index_subtitle.scrub   {single|"episodeTitle":"||",|",}
index_description.scrub{single|"shortDesc":"||",|",}
index_rating.scrub     {single|"rating":"||",|",}
index_episode.scrub    {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||"episode":"(\d+)",||}
index_showicon.scrub   {single|"thumbnail":"||",|",}
index_temp_1.scrub     {single(separator="","")|"flag":["||"]|"]}
index_temp_2.scrub     {single(separator="","")|"tag":["||"]|"]}
index_temp_3.scrub     {regex||"season":"(\d+)",||}
*temp_1.scrub {multi(debug)||||}
*
index_title.modify     {remove(type=regex)|"\s*\(\d{4}\)"}
index_title.modify     {addstart(['index_title' not~ "Live"] ['index_temp_1' ~ "Live"] &)|Live: }
index_title.modify     {addstart(['index_title' not~ "Live"] ['index_temp_2' ~ "Live"] &)|Live: }
*index_title.modify     {addend(['index_temp_1' ~ "New"] ['index_temp_2' ~ "New"] \|)| *} * add * for new shows
index_premiere.modify  {set(['index_temp_1' ~ "New"] ['index_temp_1' ~ "Live"] \| ['index_temp_2' ~ "New"]  \| ['index_temp_2' ~ "Live"] \|)|true}
index_previousshown.modify{set(['index_temp_1' not~ "New"] ['index_temp_1' not~ "Live"] & ['index_temp_2' not~ "New"] & ['index_temp_2' not~ "Live"] &)|true}
index_episode.modify   {addstart(not "")|E}
index_episode.modify   {addstart('index_temp_3' not "")|S'index_temp_3' }
index_showicon.modify  {set(not "")|https://zap2it.tmsimg.com/assets/'index_showicon'.jpg}
*
title.modify           {addstart|'index_title'}
category.scrub         {single(separator="!??!")|"seriesGenres":"||",|",}
director.scrub         {multi(max=2 include="Director")|"crew":[|{|}|]}
actor.scrub            {multi(max=8 include="Actor""Guest Star" exclude="Host""Narrator")|"cast":[|{|}|]}
writer.scrub           {multi(max=2 include="Writer")|"crew":[|{|}|]}
producer.scrub         {multi(max=2 include="Producer" max=3)|"crew":[|{|}|]}
presenter.scrub        {multi(max=2 include="Host")|"cast":[|{|}|]}
commentator.scrub      {multi(max=2 include="Narrator")|"cast":[|{|}|]}
productiondate.scrub   {regex||"releaseYear":"(\d{4})",||}
*
scope.range            {(showdetails)|end}
director.modify        {substring(type=regex)|"\"name\":\"(.+?)\"$"}
producer.modify        {substring(type=regex)|"\"name\":\"(.+?)\"$"}
presenter.modify       {substring(type=regex)|"\"name\":\"(.+?)\"$"}
writer.modify          {substring(type=regex)|"\"name\":\"(.+?)\"$"}
commentator.modify     {substring(type=regex)|"\"name\":\"(.+?)\"$"}
*
director.modify        {cleanup(style=jsondecode)}
actor.modify           {cleanup(style=jsondecode)}
writer.modify          {cleanup(style=jsondecode)}
producer.modify        {cleanup(style=jsondecode)}
presenter.modify       {cleanup(style=jsondecode)}
commentator.modify     {cleanup(style=jsondecode)}
*
loop                   {(each "temp_9" in 'actor' max=10)|end}
temp_8.modify          {substring(type=regex)|'temp_9' "\"name\":\"(.+?)\"$"}
temp_7.modify          {substring(type=regex)|'temp_9' "\"characterName\":\"(.+?)\","}
temp_7.modify          {clear(~ "assetId")}
temp_7.modify          {set(not "")|(role='temp_7')}
temp_6.modify          {addend|'temp_8''temp_7'##}
end_loop
actor.modify           {substring('temp_6' not "" type=regex)|'temp_6' "(.*?)##"}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  PROVIDER FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index               {url|https://tvlistings.gracenote.com/gapzap_webapi/api/Providers/getPostalCodeProviders/|channel|/gapzap/en}
*url_index.headers       {method=GET}
*index_site_id.scrub     {multi|"device":"||"}|"}}
*index_site_channel.scrub{multi|"name":"||",|",}
*scope.range             {(channellist)|end}
*index_site_id.modify    {replace|","lineupId":"|/}
*index_site_id.modify    {replace(type=regex)|^.*?(","name":".+?","headendId":")|/}
*index_site_id.modify    {addend|/'config_site_id'}
*index_site_id.modify    {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index                {url|https://tvlistings.gracenote.com/api/grid?lineupId=##lineup##&timespan=2&headendId=##headend##&country=##country##&device=##device##&postalCode=##zipcode##&isOverride=true&time=##time##&pref=m%2Cp%2C16%2C256&userId=-&aid=cha&languagecode=en}
*url_index.headers        {method=GET}
*scope.range              {(urlindex)|1}
*url_index.modify         {replace|##time##|'global_temp_9'}
*url_index.modify         {replace|##device##|'global_temp_1'}
*url_index.modify         {replace|##lineup##|'global_temp_2'}
*url_index.modify         {replace|##headend##|'global_temp_3'}
*url_index.modify         {replace|##country##|'global_temp_4'}
*url_index.modify         {replace|##zipcode##|'global_temp_5'}
*end_scope
*index_site_id.scrub      {regex||"callSign":"[^"]*","affiliateName":"[^"]*","affiliateCallSign":[^,]*,"channelId":"(\d+)",||}
*index_site_channel.scrub {regex||"callSign":"([^"]*","affiliateName":"[^"]*","affiliateCallSign":[^,]*,"channelId":"\d+","channelNo":"\d+(?:\.\d+)?)"||}
*index_site_id.modify     {addstart|'config_site_id'/}
*index_site_channel.modify{remove|"affiliateName":"",}
*index_site_channel.modify{remove|"affiliateCallSign":"null",}
*index_site_channel.modify{remove(type=regex)|"\"channelId\":\"\d+\","}
*index_site_channel.modify{replace|","affiliateName":"|-}
*index_site_channel.modify{replace|"affiliateCallSign":"|-}
*index_site_channel.modify{replace|","channelNo":"|(}
*index_site_channel.modify{addend|)}
*index_site_id.modify     {cleanup(reomveduplicates link="index_site_channel")}
*** @auto_xml_channel_end
