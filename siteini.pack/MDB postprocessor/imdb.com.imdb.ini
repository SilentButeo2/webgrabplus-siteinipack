**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing IMDB data from TvGuide websites
* @MinSWversion: V5.3.0
*	-  (postprocess V3.4.1)
* @Site: imdb.com, primary search with imdb
* @Revision 20 [20/08/2025] Blackbear199
*   - aka fix
*   - director/actor fix
* @Revision 19 [06/08/2025] Blackbear199
*   - aka's fix
*	- credits fix
* @Revision 18 - [04/05/2025] Mat8861
* @Revision 17 [08/01/2025] Blackbear199
*	- site changes
* @Revision 16 [11/10/2023] Blackbear199
*	- actor fix for multiple roles
*   - other improvements
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=imdb.com|mdbinitype=movie|cultureinfo=en-GB|charset=UTF-8|matchfactor=60|searchsite=imdb}
*
scope.range {(primarysearch)|end}
url_primarysearch {url(urlencode=1)|https://www.imdb.com/find/?q=|'title'|}
url_primarysearch.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
mdb_show_id.scrub {regex|primary||/title/tt(\d+)/\?ref_=||}
mdb_show_id.modify {substring(type=element)|0 5}
*
url_mdb_p1 {url|primary|https://www.imdb.com/title/tt|mdb_show_id|/}
url_mdb_p2 {url|primary|https://www.imdb.com/title/tt|mdb_show_id|/plotsummary/}
url_mdb_p3 {url|primary|https://www.imdb.com/title/tt|mdb_show_id|/releaseinfo/}
url_mdb_p4 {url|primary|https://www.imdb.com/title/tt|mdb_show_id|/reviews/}
url_mdb_p5 {url|primary|https://www.imdb.com/title/tt|mdb_show_id|/fullcredits/}
url_mdb.headers {customheader=Accept-Encoding=gzip,deflate,br}
end_scope
*
scope.range {(match)|end}
* aka titles(limited to first 6,rest are loaded by javascript)
mdb_temp_1.scrub {regex|p3||<li role="presentation" class="ipc-metadata-list__item ipc-metadata-list__item--align-end" id="rel_aka_\d+".*?</div>[^<]*</li>||}
loop {(each "mdb_temp_9" in 'mdb_temp_1')|end}
mdb_temp_8.modify {substring(type=regex)|'mdb_temp_9' "<span class=\"ipc-metadata-list-item__list-content-item ipc-btn--not-interactable\"[^>]*>(.*?)<\/span>"}
mdb_temp_7.modify {substring(type=regex)|'mdb_temp_9' "<span class=\"ipc-metadata-list-item__label ipc-btn--not-interactable\"[^>]*>(.*?)<\/span>"}
mdb_temp_6.modify {substring(type=regex)|'mdb_temp_9' "<span class=\"ipc-metadata-list-item__list-content-item--subText\">(.*?)<\/span>"}
mdb_temp_7.modify {remove|(original title)}
mdb_temp_7.modify {remove(type=regex)|"^\(\|\)*"}
mdb_temp_6.modify {remove(type=regex)|"^\(\|\)*"}
mdb_temp_8.modify {addend('mdb_temp_7' not "")| ('mdb_temp_7')}
mdb_temp_8.modify {addend('mdb_temp_6' not "")|('mdb_temp_6')}
mdb_temp_5.modify {addend('mdb_temp_8' not "")|'mdb_temp_8'####}
end_loop
mdb_title.modify {substring('mdb_temp_5' not "" type=regex)|'mdb_temp_5' "(.*?)####"}
* main title
mdb_title.scrub {single(includeblock="pageTitle")|p1|<h1|"hero__primary-text">|</span>|</h1>}
end_scope
*
scope.range {(getelements)|end}
mdb_director.scrub {regex|p5||>Directors?</span>(?:.*?)(?:<a class="ipc-link ipc-link--base name-credits--title-text name-credits--title-text-small"[^>]*>(.*?)</a>(?:.*?))*</section>||}
mdb_producer.scrub {regex|p5||>Producers?</span>(?:.*?)(?:<a class="ipc-link ipc-link--base name-credits--title-text name-credits--title-text-small"[^>]*>(.*?)</a>(?:.*?))*</section>||}
*
mdb_actor.scrub {regex|p5||>Cast</span>(?:.*?)(?:<a class="ipc-link ipc-link--base name-credits--title-text name-credits--title-text-small"[^>]*>(.*?)</div>[^<]*</div>(?:.*?))*</section>||}
mdb_actor.modify {cleanup(tags="<span>""</span>")}
mdb_actor.modify {replace(type=regex)|"[\(\)]"|`}
mdb_actor.modify {replace(type=regex)|"^[^<]*(<\/a>)"|(role=}
mdb_actor.modify {cleanup(tags="<"">")}
mdb_actor.modify {addend|)}
mdb_actor.modify {remove|(role=)}
*
mdb_productiondate.scrub {single|p1|<title>||</title>|</title>}
mdb_productiondate.modify {calculate(format=productiondate)}
*
mdb_category.scrub {multi|p1|<div class="ipc-chip-list__scroller">|<span class="ipc-chip__text">|</span>|</div>}
*
mdb_description.scrub {single|p1|<span role="presentation" data-testid="plot-xl"|>|</span>|</span>}
*
mdb_showicon.scrub {single|p1|data-testid="hero-media__poster">|src="|"|</div>}
*
mdb_starrating.scrub {regex|p1||<div data-testid="hero-rating-bar__aggregate-rating__score"[^>]*>(.*?)</span><span>||}
mdb_starrating.modify {cleanup(tags="<"">")}
mdb_starrating.modify {cleanup(removeduplicates)}
*
mdb_starratingvotes.scrub {regex|p1||<div data-testid="hero-rating-bar__aggregate-rating__score"[^>]*>(.*?)</div></div>||}
mdb_starratingvotes.modify{substring(type=regex)|">([\d+\w\s]*)$"}
mdb_starratingvotes.modify{cleanup(removeduplicates)}
*
mdb_country.scrub {single|p1|href="/search/title/?country_of_origin=|">|<|<}
*
mdb_plot.scrub {single|p2|<div data-testid="sub-section-summaries"|<div class="ipc-metadata-list-item__content-container">|</div></div></div>|</ul>}
mdb_plot.modify {cleanup(tags="<span""</span>")}
mdb_plot.modify {cleanup(tags="<"">")}
mdb_plot.modify {clear('mdb_description' ~ 'mdb_plot')}
*
mdb_commentsummary.scrub {multi|p4|"reviewSummary":"||","|","}
mdb_commentsummary.modify {cleanup(style=unidecode)}
mdb_commentsummary.modify {cleanup(style=jsondecode)}
*
mdb_review.scrub {multi|p4|"reviewText":"||","|","}
mdb_review.modify {cleanup(style=unidecode)}
mdb_review.modify {cleanup(style=jsondecode)}
mdb_review.modify {remove(type=regex)|"<.*?>"}
mdb_review.modify {replace|\\n| }
end_scope
