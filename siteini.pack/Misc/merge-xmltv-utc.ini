**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: merge-xmltv-utc
* @MinSWversion: V5.5
* @Revision 1 - [22/10/2025] Blackbear199
*   - update
* @Revision 0 - [29/08/2016] Blackbear199
*   - creation
* @Remarks: merges ini files and corrects all time to UTC.Variation of original merge-xmltv.ini
* **** <channel ... </channel> sections can have a single or multiple <display ... </display> names values.
* **** Replace [filename] with any text u want.
* Single display name,use method 1 or 2.
* 1. Keep first display name if multiple exist.
*    <update>c1-[filename]</update>
* 2. Keep last display name if multiple exist.
*    <update>c2-[filename]</update>
* @header_end
**------------------------------------------------------------------------------------------------
site {url=merge-xmltv-utc|timezone=UTC|maxdays=31.1|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90|keepindexpage}
*** set episodesystem preference,onscreen or xmltv_ns
site {episodesystem=onscreen}
*
scope.range {(urlindex)|end}
url_index{url|file://|subpage|}
*** one file:
*** subpage.format {list|path_to_xmltv_file2merge.xml}
*** more than one:
*** subpage.format {list|path_of_the_1st_xmltv_file2merge.xml|path_of_the_2nd_xmltv_file2merge.xml|etc}
subpage.format {list|C:\Users\username\AppData\Local\WebGrab+Plus\test.xml}
*
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
end_scope
*
scope.range {(datelogo)|end}
index_variable_element.modify {set|'config_site_id'}
index_variable_element.modify {cleanup(style=regex)}
*
index_urlchannellogo.scrub {multi(includeblock="id="'index_variable_element'")|<channel|<icon src="|" />|</channel>}
index_urlchannellogo.modify {substring(not "" type=element)|0 1}
end_scope
*
scope.range {(splitindex)|end}
index_variable_element.modify {replace|&|&amp;}
index_variable_element.modify {replace|'|&apos;}
index_variable_element.modify {replace|"|&quot;}
index_showsplit.scrub {regex||<programme [^>]*channel=\"'index_variable_element'\"[^>]*>.*?</programme>||}
index_showsplit.modify {cleanup(style=htmldecodespecialchar)}
*index_showsplit.modify {(debug)}
end_scope
*
scope.range {(indexshowdetails)|end}
index_start.scrub {single(separator=" " include=first)|start="||"|}
index_stop.scrub {single(separator=" " include=first)|stop="||"|}
index_title.scrub {single|<title|>|</title>|</title>}
index_subtitle.scrub {single|<sub-title|>|</sub-title>|</sub-title>}
index_description.scrub {single|<desc|>|</desc>|</desc>}
index_category.scrub {multi|<category|>|</category>|</category>}
index_director.scrub {multi|<director>||</director>|</director>}
index_actor.scrub {multi|<actor||</actor>|</actor>}
index_writer.scrub {multi|<writer>||</writer>|</writer>}
index_producer.scrub {multi|<producer>||</producer>|</producer>}
index_presenter.scrub {multi|<presenter>||</presenter>|</presenter>}
index_composer.scrub {multi|<composer>||</composer>|</composer>}
index_productiondate.scrub {single|<date>||</date>|</date>}
index_country.scrub {single|<country>||</country>|</country>}
index_rating.scrub {multi|<rating||</rating>|</rating>}
index_starrating.scrub {multi|<star-rating||</star-rating>|</star-rating>}
index_episode.scrub {single(pattern="S'S1'/'St1' E'E1'/'Et1' P'P1'/'Pt1'""S'S1'E'E1' P'P1'/'Pt1'""S'S1'/'St1' E'E1'/'Et1'""E'E1'/'Et1'""'S0'/'St1'.'E0'/'Et1'.'P0'/'Pt1'""'S0'.'E0'.'P0'/'Pt1'""'S0'/'St1'.'E0'/'Et1'.""'S0'.'E0'."".'E0'.")|<episode-num|>|</episode-num>|</episode-num>}
index_showicon.scrub {single|<programme|<icon src="|" />|</programme>}
index_premiere.scrub {regex||(<premiere)||}
index_previousshown.scrub {regex||(<previousshown)||}
index_temp_9.scrub {single(separator=" " include=last)|start="||"|"}
index_temp_8.scrub {single|<title|lang="|"|>|>}
*
index_start.modify {replace(type=regex)|"^\d{4}(.*?)\d{2}(.*?)\d{8}$"|-}
index_start.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}(.*?)\d{6}$"|T}
index_start.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}T\d{2}(.*?)\d{2}(.*?)\d{2}$"|:}
*
index_stop.modify {replace(type=regex)|"^\d{4}(.*?)\d{2}(.*?)\d{8}$"|-}
index_stop.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}(.*?)\d{6}$"|T}
index_stop.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}T\d{2}(.*?)\d{2}(.*?)\d{2}$"|:}
*
index_temp_9.modify {replace(type=regex)|"^[-\+]\d{2}(.*?)\d{2}$"|.}
index_temp_9.modify {calculate(format=timespan,hours)}
*
index_start.modify {calculate(format=date,unix)|'index_temp_9' -}
index_stop.modify {calculate(format=date,unix)|'index_temp_9' -}
*
index_temp_4.modify {clear}
loop {(each "index_temp_7" in 'index_actor')|end}
index_temp_6.modify {substring(type=regex)|'index_temp_7' "role=\"(.*?)\">"}
index_temp_5.modify {substring(type=regex)|'index_temp_7' ">(.*)$"}
index_temp_5.modify {addend('index_temp_6' not "")|(role='index_temp_6')}
index_temp_4.modify {addend('index_temp_5' not "")|'index_temp_5'####}
end_loop
index_actor.modify {substring(type=regex)|'index_temp_4' "(.*?)####"}
*
index_temp_4.modify {clear}
loop {(each "index_temp_7" in 'index_rating')|end}
index_temp_6.modify {substring(type=regex)|'index_temp_7' "system=\"(.*?)\">"}
index_temp_5.modify {substring(type=regex)|'index_temp_7' "<value>(.*)<\/value"}
index_temp_5.modify {addend('index_temp_6' not "")|(system='index_temp_6')}
index_temp_4.modify {addend('index_temp_5' not "")|'index_temp_5'####}
end_loop
index_rating.modify {substring(type=regex)|'index_temp_4' "(.*?)####"}
*
index_temp_4.modify {clear}
loop {(each "index_temp_7" in 'index_starrating')|end}
index_temp_6.modify {substring(type=regex)|'index_temp_7' "system=\"(.*?)\">"}
index_temp_5.modify {substring(type=regex)|'index_temp_7' "<value>(.*)<\/value"}
index_temp_5.modify {addend('index_temp_6' not "")|(system='index_temp_6')}
index_temp_4.modify {addend('index_temp_5' not "")|'index_temp_5'####}
end_loop
index_starrating.modify {substring(type=regex)|'index_temp_4' "(.*?)####"}
*
index_premiere.modify {set(not "")|true}
index_previousshown.modify {set(not "")|true}
*
if {('index_temp_8' not "")|end}
index_title.modify {addend|(lang='index_temp_8')}
index_subtitle.modify {addend(not "")|(lang='index_temp_8')}
index_description.modify {addend(not "")|(lang='index_temp_8')}
index_category.modify {addend(not "")|(lang='index_temp_8')}
index_country.modify {addend(not "")|(lang='index_temp_8')}
index_premiere.modify {addend(not "")|(lang='index_temp_8')}
end_if
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
** @auto_xml_channel_start
*scope.range {(channellist)|end}
*index_site_id.scrub {regex||<channel[^>]*>.*?</channel>||}
*index_site_id.modify {cleanup(style=htmldecodespecialchar)}
*index_temp_6.modify {clear}
*index_temp_5.modify {clear}
*loop{(each "index_temp_9" in 'index_site_id')|end}
*index_temp_8.modify {substring(type=regex)|'index_temp_9' "<channel[^>]*id=\"([^\"]*)\"[^>]*>"}
*index_temp_7.modify {substring(type=regex)|'index_temp_9' "^<channel[^>]*>[^<]*<display-name\s*[^>]*>([^<]*)<\/display-name>"}
*index_temp_6.modify {addend|'index_temp_8'####}
*index_temp_5.modify {addend|'index_temp_7'####}
*end_loop
*index_site_id.modify {substring(type=regex)|'index_temp_6' "(.*?)####"}
*index_site_channel.modify {substring(type=regex)|'index_temp_5' "(.*?)####"}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
** @auto_xml_channel_start
*scope.range {(channellist)|end}
*index_site_id.scrub {regex||<channel[^>]*>.*?</channel>||}
*index_site_id.modify {cleanup(style=htmldecodespecialchar)}
*index_temp_6.modify {clear}
*index_temp_5.modify {clear}
*loop{(each "index_temp_9" in 'index_site_id')|end}
*index_temp_8.modify {substring(type=regex)|'index_temp_9' "<channel[^>]*id=\"([^\"]*)\"[^>]*>"}
*index_temp_7.modify {substring(type=regex)|'index_temp_9' "<display-name\s*[^>]*>([^<]*)<\/display-name>(?:[^<]*<icon[^>]*>)?(?:[^<]*<url[^>]*>[^<]*<\/url>)?[^<]*<\/channel>$"}
*index_temp_6.modify {addend|'index_temp_8'####}
*index_temp_5.modify {addend|'index_temp_7'####}
*end_loop
*index_site_id.modify {substring(type=regex)|'index_temp_6' "(.*?)####"}
*index_site_channel.modify {substring(type=regex)|'index_temp_5' "(.*?)####"}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end