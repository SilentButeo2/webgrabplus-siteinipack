**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: futvcr.com
* @MinSWversion: V5.0
* @Revision 0 - [24/07/2025] Blackbear199
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=intv.com.ar|timezone=America/Costa_Rica|maxdays=7.1|cultureinfo=es-CR|charset=UTF-8|titlematchfactor=90|firstday=0123456}
site {ratingsystem=CR|episodesystem=onscreen}
*
scope.range {(urlindex)|end}
url_index {url|https://futvcr.com/programacion/}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
global_temp_9.scrub {regex||<div class="flip-card">.*?</div>[^<]*</div>[^<]*</div>||}
*
urldate.format {datestring|yyyy-MM-dd}
end_scope
*
scope.range {(datelogo)|1}
index_urlchannellogo.modify {set|https://futvcr.com/wp-content/uploads/2023/08/WhatsApp_Image_2023-08-01_at_15.28.48-removebg-preview.png}
*
scope.range {(splitindex)|end}
index_showsplit.scrub {multi(exclude=first include="</td><")|<table id="positions-table"|<tr>|</tr>|</table>}
*
loop {(each "index_temp_9" in 'index_showsplit')|end}
index_temp_8.modify {substring(type=regex)|'index_temp_9' "^<td rowspan=\"1\">\d+:\d+<\/td>"}
index_temp_9.modify {remove|'index_temp_8'}
index_temp_8.modify {substring(type=regex)|">(\d+:\d+)<"}
index_temp_8.modify {calculate(format=time,HH:mm)}
index_temp_9.modify {replace(type=regex)|"<td\s(.*?)"|time="'index_temp_8'" }
index_temp_7.modify {addend|'index_temp_9'####}
end_loop
index_showsplit.modify {substring(type=regex)|'index_temp_7' "(.*?)####"}
index_showsplit.modify {replace|</td><td|</td>\|<td}
*
index_temp_1.modify {set|0}
loop {(each "index_temp_9" in 'index_showsplit')|end}
index_temp_8.modify {substring(type=regex)|'index_temp_9' "time=\"(\d+:\d+)\""}
index_temp_7.modify {substring(type=regex)|'index_temp_9' "rowspan=\"(\d+)\""}
index_temp_7.modify {calculate(format=F0)|30 *}
index_temp_7.modify {calculate(format=timespan,hours)}
index_temp_6.modify {calculate(format=time,HH:mm)|'index_temp_8' 'index_temp_7' +}
index_temp_9.modify {replace(type=regex)|"time=\"\d+:\d+(.*?)"|-'index_temp_6'}
index_temp_5.modify {addend|'index_temp_9'[['index_temp_1']]####}
index_temp_1.modify {calculate(format=F0)|1 +}
end_loop
index_showsplit.modify {substring(type=regex)|'index_temp_5' "(.*?)####"}
*
index_variable_element.modify {clear}
*
*monday
index_temp_4.modify {clear}
index_temp_3.modify {clear}
index_temp_1.modify {clear}
*
index_temp_4.modify {substring(type=element)|'index_showsplit' 0 1}
index_temp_3.modify {set|'index_temp_4'####}
*
index_temp_1.modify {calculate(format=F0 type=element)|'index_showsplit' #}
index_temp_2.modify {set|1}
*
loop {('index_temp_2' < 'index_temp_1')|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_2' 1}
index_temp_8.modify {substring(type=regex)|'index_temp_4' "time=\"\d+:\d+-(\d+:\d+)\""}
index_temp_7.modify {substring(type=regex)|'index_temp_9' "time=\"(\d+:\d+)-\d+:\d+\""}
if {(['index_temp_8' = 'index_temp_7'] ['index_temp_9' not ""] &)|end}
index_temp_3.modify {addend|'index_temp_9'####}
index_temp_4.modify {set|'index_temp_9'}
end_if
index_temp_2.modify {calculate(format=F0)|1 +}
end_loop
*
index_variable_element.modify {addend|'index_temp_3'}
*
index_temp_6.modify {substring(type=regex)|'index_temp_3' "\[\[(\d+)\]\]"}
loop {(each "index_temp_5" in 'index_temp_6')|end}
index_showsplit.modify {remove(type=regex)|"^.*\[\['index_temp_5'\]\]$"}
end_loop
*
*tuesday
index_temp_4.modify {clear}
index_temp_3.modify {clear}
index_temp_1.modify {clear}
*
index_temp_4.modify {substring(type=element)|'index_showsplit' 1 1}
index_temp_3.modify {set|'index_temp_4'####}
*
index_temp_1.modify {calculate(format=F0 type=element)|'index_showsplit' #}
index_temp_2.modify {set|2}
*
loop {('index_temp_2' < 'index_temp_1')|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_2' 1}
index_temp_8.modify {substring(type=regex)|'index_temp_4' "time=\"\d+:\d+-(\d+:\d+)\""}
index_temp_7.modify {substring(type=regex)|'index_temp_9' "time=\"(\d+:\d+)-\d+:\d+\""}
if {(['index_temp_8' = 'index_temp_7'] ['index_temp_9' not ""] &)|end}
index_temp_3.modify {addend|'index_temp_9'####}
index_temp_4.modify {set|'index_temp_9'}
end_if
index_temp_2.modify {calculate(format=F0)|1 +}
end_loop
*
index_variable_element.modify {addend|'index_temp_3'}
*
index_temp_6.modify {substring(type=regex)|'index_temp_3' "\[\[(\d+)\]\]"}
loop {(each "index_temp_5" in 'index_temp_6')|end}
index_showsplit.modify {remove(type=regex)|"^.*\[\['index_temp_5'\]\]$"}
end_loop
*
*wednesday
index_temp_4.modify {clear}
index_temp_3.modify {clear}
index_temp_1.modify {clear}
*
index_temp_4.modify {substring(type=element)|'index_showsplit' 2 1}
index_temp_3.modify {set|'index_temp_4'####}
*
index_temp_1.modify {calculate(format=F0 type=element)|'index_showsplit' #}
index_temp_2.modify {set|3}
*
loop {('index_temp_2' < 'index_temp_1')|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_2' 1}
index_temp_8.modify {substring(type=regex)|'index_temp_4' "time=\"\d+:\d+-(\d+:\d+)\""}
index_temp_7.modify {substring(type=regex)|'index_temp_9' "time=\"(\d+:\d+)-\d+:\d+\""}
if {(['index_temp_8' = 'index_temp_7'] ['index_temp_9' not ""] &)|end}
index_temp_3.modify {addend|'index_temp_9'####}
index_temp_4.modify {set|'index_temp_9'}
end_if
index_temp_2.modify {calculate(format=F0)|1 +}
end_loop
*
index_variable_element.modify {addend|'index_temp_3'}
*
index_temp_6.modify {substring(type=regex)|'index_temp_3' "\[\[(\d+)\]\]"}
loop {(each "index_temp_5" in 'index_temp_6')|end}
index_showsplit.modify {remove(type=regex)|"^.*\[\['index_temp_5'\]\]$"}
end_loop
*
*thursday
index_temp_4.modify {clear}
index_temp_3.modify {clear}
index_temp_1.modify {clear}
*
index_temp_4.modify {substring(type=element)|'index_showsplit' 3 1}
index_temp_3.modify {set|'index_temp_4'####}
*
index_temp_1.modify {calculate(format=F0 type=element)|'index_showsplit' #}
index_temp_2.modify {set|4}
*
loop {('index_temp_2' < 'index_temp_1')|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_2' 1}
index_temp_8.modify {substring(type=regex)|'index_temp_4' "time=\"\d+:\d+-(\d+:\d+)\""}
index_temp_7.modify {substring(type=regex)|'index_temp_9' "time=\"(\d+:\d+)-\d+:\d+\""}
if {(['index_temp_8' = 'index_temp_7'] ['index_temp_9' not ""] &)|end}
index_temp_3.modify {addend|'index_temp_9'####}
index_temp_4.modify {set|'index_temp_9'}
end_if
index_temp_2.modify {calculate(format=F0)|1 +}
end_loop
*
index_variable_element.modify {addend|'index_temp_3'}
*
index_temp_6.modify {substring(type=regex)|'index_temp_3' "\[\[(\d+)\]\]"}
loop {(each "index_temp_5" in 'index_temp_6')|end}
index_showsplit.modify {remove(type=regex)|"^.*\[\['index_temp_5'\]\]$"}
end_loop
*
*friday
index_temp_4.modify {clear}
index_temp_3.modify {clear}
index_temp_1.modify {clear}
*
index_temp_4.modify {substring(type=element)|'index_showsplit' 4 1}
index_temp_3.modify {set|'index_temp_4'####}
*
index_temp_1.modify {calculate(format=F0 type=element)|'index_showsplit' #}
index_temp_2.modify {set|5}
*
loop {('index_temp_2' < 'index_temp_1')|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_2' 1}
index_temp_8.modify {substring(type=regex)|'index_temp_4' "time=\"\d+:\d+-(\d+:\d+)\""}
index_temp_7.modify {substring(type=regex)|'index_temp_9' "time=\"(\d+:\d+)-\d+:\d+\""}
if {(['index_temp_8' = 'index_temp_7'] ['index_temp_9' not ""] &)|end}
index_temp_3.modify {addend|'index_temp_9'####}
index_temp_4.modify {set|'index_temp_9'}
end_if
index_temp_2.modify {calculate(format=F0)|1 +}
end_loop
*
index_variable_element.modify {addend|'index_temp_3'}
*
index_temp_6.modify {substring(type=regex)|'index_temp_3' "\[\[(\d+)\]\]"}
loop {(each "index_temp_5" in 'index_temp_6')|end}
index_showsplit.modify {remove(type=regex)|"^.*\[\['index_temp_5'\]\]$"}
end_loop
*
*saturday
index_temp_4.modify {clear}
index_temp_3.modify {clear}
index_temp_1.modify {clear}
*
index_temp_4.modify {substring(type=element)|'index_showsplit' 5 1}
index_temp_3.modify {set|'index_temp_4'####}
*
index_temp_1.modify {calculate(format=F0 type=element)|'index_showsplit' #}
index_temp_2.modify {set|6}
*
loop {('index_temp_2' < 'index_temp_1')|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_2' 1}
index_temp_8.modify {substring(type=regex)|'index_temp_4' "time=\"\d+:\d+-(\d+:\d+)\""}
index_temp_7.modify {substring(type=regex)|'index_temp_9' "time=\"(\d+:\d+)-\d+:\d+\""}
if {(['index_temp_8' = 'index_temp_7'] ['index_temp_9' not ""] &)|end}
index_temp_3.modify {addend|'index_temp_9'####}
index_temp_4.modify {set|'index_temp_9'}
end_if
index_temp_2.modify {calculate(format=F0)|1 +}
end_loop
*
index_variable_element.modify {addend|'index_temp_3'}
*
index_temp_6.modify {substring(type=regex)|'index_temp_3' "\[\[(\d+)\]\]"}
loop {(each "index_temp_5" in 'index_temp_6')|end}
index_showsplit.modify {remove(type=regex)|"^.*\[\['index_temp_5'\]\]$"}
end_loop
*
*sunday
index_temp_4.modify {clear}
index_temp_3.modify {clear}
index_temp_1.modify {clear}
*
index_temp_4.modify {substring(type=element)|'index_showsplit' 6 1}
index_temp_3.modify {set|'index_temp_4'####}
*
index_temp_1.modify {calculate(format=F0 type=element)|'index_showsplit' #}
index_temp_2.modify {set|7}
*
loop {('index_temp_2' < 'index_temp_1')|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_2' 1}
index_temp_8.modify {substring(type=regex)|'index_temp_4' "time=\"\d+:\d+-(\d+:\d+)\""}
index_temp_7.modify {substring(type=regex)|'index_temp_9' "time=\"(\d+:\d+)-\d+:\d+\""}
if {(['index_temp_8' = 'index_temp_7'] ['index_temp_9' not ""] &)|end}
index_temp_3.modify {addend|'index_temp_9'####}
index_temp_4.modify {set|'index_temp_9'}
end_if
index_temp_2.modify {calculate(format=F0)|1 +}
end_loop
*
index_variable_element.modify {addend|'index_temp_3'}
*
index_temp_6.modify {substring(type=regex)|'index_temp_3' "\[\[(\d+)\]\]"}
loop {(each "index_temp_5" in 'index_temp_6')|end}
index_showsplit.modify {remove(type=regex)|"^.*\[\['index_temp_5'\]\]$"}
end_loop
*
index_showsplit.modify {substring(type=regex)|'index_variable_element' "(.*?)####"}
*index_showsplit.modify{(debug)}
end_scope
*
scope.range {(indexshowdetails)|end}
index_start.scrub {single|time="||-|-}
index_stop.scrub {single|time="|-|"|"}
index_title.scrub {single|>||<|<}
*
index_category.modify {set|Sport}
*
index_temp_9.modify {set|'global_temp_9'}
index_temp_9.modify {select|">'index_title'<" ~}
index_showicon.modify {substring(type=regex)|'index_temp_9' "<img src=\"(.*?)\""}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*scope.range {(channellist)|end}
*index_site_id.scrub {|}
*index_site_id.modify {set|futv}
*index_site_channel.modify {set|FUTV}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
*@auto_xml_channel_end
