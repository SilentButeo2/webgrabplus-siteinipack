﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: idnes.cz
* @MinSWversion: V5.0
* @Revision 4 - [29/07/2025] Blackbear199
*  - update
* @Revision 3 - [18/03/2025] Blackbear199
*  - update
* @Revision 2 - [18/04/2018] Blackbear199
*  - rewrite to use single channel page(multiday)
* @Revision 1 - [26/05/2017] Blackbear199
*  - updated to use roman 2 arabic numeral conversion(Version 2.0.6.2 or above required)
*  - add system to starrating
* @Revision 0 - [07/02/2017] Blackbear199
*  - creation
* @Remarks: 
* ******cookies required
*       goto https://tvprogram.idnes.cz/
*       export cookie as idnes.cz.cookies.txt and save in webgrab config directory.
*       if webgrab reports a cookie error,delete the problem cookie.
* epsisode systyem=onscreen only as sometimes multiple episodes are aired
* @header_end
**------------------------------------------------------------------------------------------------
site {url=idnes.cz|timezone=Europe/Prague|maxdays=7.1|cultureinfo=cs-CZ|charset=windows-1250|titlematchfactor=90|nopageoverlaps}
site {ratingsystem=Kinobox.cz|episodesystem=onscreen|loadcookie=idnes.cz.cookies.txt}
*
scope.range {(urlindex)|end}
url_index {url|https://tvprogram.idnes.cz/tvprogram.aspx?program=|channel|}
url_index.headers {host=tvprogram.idnes.cz}
url_index.headers {referer=https://tvprogram.idnes.cz/}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format {daycounter|0}
end_scope
*
index_urlchannellogo {url||<img class="tvlogo" src="||"|"}
*
scope.range {(splitindex)|end}
index_showsplit.scrub {regex||<tr id="t(?:00\|05\|09\|12\|16\|20\|24)"\s*>(?:.*?)(?:(?:<td>(<a.*?</a>)</td>\|(<td></td>))(?:.*?))*</tr>||}
*
index_temp_1.modify {set|0}
index_temp_2.modify {calculate(format=F0 type=element)|'index_showsplit' #}
*
loop {('index_temp_1' < 'index_temp_2' max=7)|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_1' 1/7}
index_temp_9.modify {replace|</a><a|</a>\|<a}
index_temp_9.modify {replace|\||####}
index_temp_9.modify {remove(type=regex)|"<td><\/td>(?:####)?"}
index_temp_8.modify {addend|'index_temp_9'####}
index_temp_1.modify {calculate(format=F0)|1 +}
end_loop
index_showsplit.modify {substring(type=regex)|'index_temp_8' "(.*?)####"}
*index_showsplit.modify {(debug)}
end_scope
*
scope.range {(indexshowdetails)|end}
index_urlshow {url||href="||">|">}
index_urlshow.headers {host=tvprogram.idnes.cz}
index_urlshow.headers {referer=https://tvprogram.idnes.cz/}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub {regex||<small>(\d{2}:\d{2})</small>||}
*index_duration.scrub {single|data-length="||"|"} *causes missing programs if combi channel used
index_title.scrub {single|<h3>||</h3>|</h3>}
index_category.scrub {single(separator=" " include="x-dkm""x-zvb""x-zpr""x-prd""x-ser""x-flm""x-spr""x-hdb")|<div class="||">|">}
index_productiondate.scrub {regex||<p>.*?\s\(*(\d{4})\)*\.[^<]*</p>||}
index_premiere.scrub {regex||<i class="(x-prem)">||}
index_temp_1.scrub {regex||<i class="(x-live)">||}
*
index_episode.modify {substring(type=regex)|'index_title' "\s*((?:[IVXLCDM]+)?\s\(\d+(?:/\d+\|(?:,\s\d+)?)\))"}
index_title.modify {remove(type=regex)|"\s*(?:[IVXLCDM]+)?\s\(\d+(?:/\d+\|(?:,\s\d+)?)\)"}
index_title.modify {addstart('index_temp_1' not "")|Živě: }
index_episode.modify {cleanup(style=roman2arabicnumeral)}
index_episode.modify {remove(type=regex)|"(?:^\s*\|\s*$)"}
*
index_premiere.modify {set(not "")|true}
*
index_category.modify {replace|x-dkm|Dokumentární}
index_category.modify {replace|x-zbv|Zábava}
index_category.modify {replace|x-zpr|Zprávy}
index_category.modify {replace|x-prd|Pro Pěti}
index_category.modify {replace|x-ser|Seriál}
index_category.modify {replace|x-flm|Film}
index_category.modify {replace|x-spr|Sport}
index_category.modify {replace|x-hdb|Hudba}
end_scope
*
scope.range {(showdetails)|end}
description.scrub {multi|<div class="fc9">|<p>|</p>|<div>}
director.scrub {regex||Režie: </strong>(.*?)(?:</p>\|<br>)||}
actor.scrub {single(separator=", " max=6)|Hrají: </strong>||</p>|</p>}
starrating.scrub {regex||<i class="x-kbx"></i>\s*([1-9]\d*(?:,\d+)?)\s\%[^<]*</a>||}
showicon.scrub {single|<div class="relative">|src="|"|">}
*
title.modify {addstart|'index_title'}
director.modify {remove(type=regex)|"^\s+$"}
actor.modify {remove(type=regex)|"^\s+$"}
actor.modify {remove(type=regex)|\.+$}
*
starrating.modify {replace|,|.}
starrating.modify {calculate(not "" format=F1)|10 /}
*
showicon.modify {addstart(not "")|https:}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*scope.range {(urlindex)|end}
*url_index {url|https://tvprogram.idnes.cz/tvprogram.aspx?t=channels&g=inside}
*end_scope
*ecope.range {(channellist)|end}
*index_site_id.scrub {multi|<ul>|data-channel="|">|</ul>}
*index_site_channel.scrub {multi|<ul>|title="|"|</ul>}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
