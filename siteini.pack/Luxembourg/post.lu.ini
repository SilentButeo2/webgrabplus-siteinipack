**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: post.lu
* @MinSWversion: 5.1
* @Revision 2  - [19/08/2025] Mat8861
* @Revision 1  - [19/01/2021] Mat8861
* @Revision 0  - [26/12/2020] Mat8861
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=post.lu|timezone=UTC|maxdays=7|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90|nopageoverlaps}
*
urldate.format {datestring|yyyy-MM-dd}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
url_index{url|https://tv.post.lu/api/channels?id=|channel|&date=|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
index_urlchannellogo {url(include=last)||"logo":[|"url":"|",|]}
scope.range{(splitindex)|end}
index_showsplit.scrub {multi|"epg":|||}}}
index_showsplit.modify {substring(type=regex)|"\{"tsstart":"[^"]*","tsend":"[^"]*",.*?\}"}
index_showsplit.modify {cleanup(style=jsondecode)}
end_scope
*
index_start.scrub {regex||"tsStart":(\d+)||}
index_title.scrub {single|"title":"||",|",} 
index_category.scrub{single|"program_type":"||"|"}
index_description.scrub {single|"description":"||",|",}
index_description.modify{cleanup}
index_productiondate.scrub{single|"year":"||",|",}
index_temp_2.scrub{single|"language":"||",|",}
index_showicon.scrub {single|"image_url":"||",|",}
index_title.modify {addend|(lang='index_temp_2')}
index_subtitle.modify {addend(not "")|(lang='index_temp_2')}
index_description.modify {addend(not "")|(lang='index_temp_2')}
index_category.modify {addend(not "")|(lang='index_temp_2')}
**
**
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url()|https://tv.post.lu/api/channels/?page=|subpage|}
*subpage.format {list(format=D1 step=1 count=19)|1} 
*url_index.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
*url_index.headers {customheader=X-Requested-With=XMLHttpRequest}
*index_site_channel.modify {replace|'|â€™}
*index_site_channel.scrub  {regex()||{"id":"[^"]*","epg_id":".*?","name":"([^"]*)","||}
*index_site_id.scrub {regex()||{"id":"([^"]*)","epg_id":".*?","name":"[^"]*","||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
