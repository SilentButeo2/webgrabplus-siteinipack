**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: mi.tv
* @MinSWversion: V2.1.1
* @Revision 10 - [08/08/2018] Trujulu
*   - Remove generic title when there is no EPG for the channel.
* @Revision 9 - [07/08/2018] Trujulu
*   - Category fixes
*   - Fixed description grabbing.
* @Revision 8 - [12/01/2018] Netuddki
*   - Some improvements
* @Revision 7 - [30/08/2017] Netuddki
*   - complete rewrite
* @Revision 6 - [25/07/2017] Blackbear199
*   - many element fixes/changes
*   - added lang support for different countries
* @Revision 5 - [03/06/2017] Netuddki
*   - Cleanup Title to avoid suspicious titles
* @Revision 4 - [30/02/2017] Netuddki
*   - Partial rewrite
*   - Added episode system option for xmltv_ns
*   - Added Year, Country, Rating, Starrating, better category scrub
* @Revision 3 - [20/02/2017] Netuddki
*   - Fixed skipping Shows in type SPORT without title
* @Revision 2 - [24/08/2016] Blackbear199
*   - combined all countries into single channels.xml creation
* @Revision 1 - [14/06/2016] Blackbear199
*   - change start/stop times to UTC
* @Revision 0 - [01/02/2016] 1NSdbZVbpZDX
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
*
site {url=mi.tv|timezone=UTC|maxdays=10|cultureinfo=es-AR|charset=UTF-8|titlematchfactor=90}
site {allowlastdayoverflow}
site {ratingsystem=ES}
*
*site {episodesystem=onscreen} *Enable for Onscreen Episode System
site {episodesystem=xmltv_ns} *Enable for xmltv_ns Episode System
*
urldate.format {datestring|yyyy-MM-dd}
*
url_index {url|https://mi.tv/##index_variable_element##/async/channel/##index_temp_1##/|urldate|/0}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
scope.range {(urlindex)|end}
index_temp_1.modify {substring(type=regex)|'config_site_id' "\w{2}_(.*)"}
index_variable_element.modify {substring(type=regex)|'config_site_id' "(\w{2})_"}
url_index.modify {replace|##index_variable_element##|'index_variable_element'}
url_index.modify {replace|##index_temp_1##|'index_temp_1'}
end_scope
*
*
index_showsplit.scrub {regex||<li >(.*?)</li>||}
*
index_urlshow {url|https://mi.tv|<a href="||"}
*
index_start.scrub {regex||<span class="time">(.*?)</span>||}
index_title.scrub {regex||<h2>(.*?)</h2>||}
index_title.modify {cleanup(tags="<"">")}
*
index_temp_2.scrub {regex||<span class="sub-title">(.*?)</span>||}
index_subtitle.modify {substring(type=regex)|'index_temp_2.' "- (.*)"}
*
index_episode.modify {substring(type=regex pattern="Temporada 'S1' Episodio 'E1'""Episodio 'E1'")|'index_temp_2' "Temporada \d+ Episodio \d+\|Episodio \d+"}
index_subtitle.modify {remove|'index_episode'}
*
index_category.modify {addstart|'index_temp_2'}
index_category.modify {remove|'index_subtitle'}
index_category.modify {remove|'index_episode'}
index_category.modify {remove(type=regex)|[\\/:\*\?\"<>=']}
index_category.modify {replace|  span classrating|}
index_category.modify {replace| good.|}
index_category.modify {replace| good|}
index_category.modify {replace|  |DELETE}
index_category.modify {remove(type=regex)|[0-9].}
index_category.modify {remove(type=regex)|DELETE[0-9]}
index_category.modify {remove(type=regex)|[0-9]}
index_category.modify {replace|DELETE|}
index_category.modify {replace|Fecha |}
*
index_showicon.scrub {regex||<div class="image-parent desktop">.*?url\('(.*?)'\)||}
*
title.scrub {regex||<h1.*?>(.*?)</h1>||}
description.scrub {single|description"|content="|"/>|}
description.modify {cleanup(tags="<"">")}
description.modify {remove|mi.tv es una guía de TV con la programación de todos los canales nacionales e internacionales que quieres ver.}
*
category.scrub {regex||<ul class='movie-meta'><li>(.*?)</li>||}
temp_1.scrub {regex||<title>(.*?)</title>||}
category.modify {substring(type=regex)|'temp_1' ".*?\((.*?)\)"}
productiondate.scrub {regex||<ul class='movie-meta'><li>.*?</li><li>(\d{4})</li>||}
rating.scrub {regex||<ul class='movie-meta'><li>.*?</li><li>\d{4}</li><li>(.*?)</li>||}
starrating.scrub {regex||IMDb <span>(.*?)</span>||}
*
category.modify {cleanup(removeduplicates=equal,100)}
*
titleoriginal.scrub {regex||tulo original:(.*?)</dd>||}
titleoriginal.modify {cleanup(tags="<"">")}
*
temp_2.scrub {regex||Director:(.*?)</dd>||}
temp_2.modify {cleanup(tags="<"">")}
director.modify {substring(type=regex)|'temp_2' "(.*?), *\|(.*)"}
*
temp_3.scrub {regex||Elenco:(.*?)</dd>||}
temp_3.modify {cleanup(tags="<"">")}
actor.modify {substring(type=regex)|'temp_3' "(.*?), *\|(.*)"}
*
*
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://mi.tv/|subpage|/sitemap}
*subpage.format {list|ar|co|br|mx|py|gt|hn|sv}
*index_site_channel.scrub {multi|<h2>Canales</h2>|<li>|</a>|</ul>}
*index_site_channel.modify {cleanup(tags="<"">")}
*index_site_id.scrub {multi|<h2>Canales</h2>|<a href="/|">|</ul>}
*index_site_id.modify {replace|/canales/|_}
** @auto_xml_channel_end
